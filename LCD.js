function call(MPV) {
	var MRV = {
		Output: {},
		PrivateInfo: {
			OutputPreviousValue: {},
		},
		Refresh: [],
		Token: "",
	};

	// 定义29条指令，与数字量输入一一对应
	var commands = [
		"\x04\x00\x01\x00", // 开屏 (对应数字量输入1)
		"\x04\x00\x02\x00", // 关屏 (对应数字量输入2)
		"\x04\x00\x03\x00", // 播放 (对应数字量输入3)
		"\x04\x00\x04\x00", // 暂停 (对应数字量输入4)
		"\x04\x00\x06\x00", // 上一个节目 (对应数字量输入5)
		"\x04\x00\x07\x00", // 下一个节目 (对应数字量输入6)
		"\x04\x00\x09\x00", // 静音 (对应数字量输入7)
		"\x04\x00\x0A\x00", // 音量+ (对应数字量输入8)
		"\x04\x00\x0B\x00", // 音量- (对应数字量输入9)
		"\x04\x00\x0D\x00", // 亮度+ (对应数字量输入10)
		"\x04\x00\x0E\x00", // 亮度- (对应数字量输入11)
		"\x04\x00\x0F\x00", // 列表循环 (对应数字量输入12)
		"\x04\x00\x0F\x01", // 单节目循环 (对应数字量输入13)
		"\x05\x00\x05\x00\x00", // 节目1 (对应数字量输入14)
		"\x05\x00\x05\x00\x01", // 节目2 (对应数字量输入15)
		"\x05\x00\x05\x00\x02", // 节目3 (对应数字量输入16)
		"\x05\x00\x05\x00\x03", // 节目4 (对应数字量输入17)
		"\x05\x00\x05\x00\x04", // 节目5 (对应数字量输入18)
		"\x05\x00\x05\x00\x05", // 节目6 (对应数字量输入19)
		"\x05\x00\x05\x00\x06", // 节目7 (对应数字量输入20)
		"\x05\x00\x05\x00\x07", // 节目8 (对应数字量输入21)
		"\x05\x00\x05\x00\x08", // 节目9 (对应数字量输入22)
		"\x05\x00\x05\x00\x09", // 节目10 (对应数字量输入23)
		"\x05\x00\x05\x00\x0A", // 节目11 (对应数字量输入24)
		"\x05\x00\x05\x00\x0B", // 节目12 (对应数字量输入25)
		"\x05\x00\x05\x00\x0C", // 节目13 (对应数字量输入26)
		"\x05\x00\x05\x00\x0D", // 节目14 (对应数字量输入27)
		"\x05\x00\x05\x00\x0E", // 节目15 (对应数字量输入28)
	];

	// 检查每个数字量输入，当为true时输出对应指令
	for (var i = 0; i < 29; i++) {
		var inputName = "Pos" + (i + 1);
		// 检查该输入是否存在且值为true
		if (
			MPV["Input"][inputName] &&
			MPV["Input"][inputName]["SignalValue"] == true
		) {
			// 将对应的指令输出到串行量信号1
			MRV["Output"]["Pos1"] = commands[i];
			//console.log("输出指令: " + commands[i] + " (对应输入" + inputName + ")");
			MRV["Refresh"].push("Pos1");
			// 只处理第一个为true的输入，避免冲突
			break;
		}
	}

	return MRV;
}
