function call(MPV) {
	var MRV = {
		Output: {},
		PrivateInfo: {
			OutputPreviousValue: {},
		},
		Refresh: [],
		Token: "",
	};
/* 
参考处理器协议V1.9版本

*/
	// 定义29条指令，与数字量输入一一对应
	var commands = [
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x00\x00\xf3\xaa", // 模版1 (对应数字量输入1)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x01\x00\xf4\xaa", // 2 (对应数字量输入2)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x02\x00\xf5\xaa", // 3 (对应数字量输入3)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x03\x00\xf6\xaa", // 4 (对应数字量输入4)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x04\x00\xf7\xaa", // 5 (对应数字量输入5)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x05\x00\xf8\xaa", // 6 (对应数字量输入6)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x06\x00\xf9\xaa", // 7 (对应数字量输入7)
		"\x56\x50\x00\x08\x00\x41\x00\x02\x02\x07\x00\xfa\xaa", // 8 (对应数字量输入8)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x03\x00\xb9\xaa", // HDMI1 (对应数字量输入9)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x08\x00\xbe\xaa", // HDMI2 (对应数字量输入10)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x04\x00\xba\xaa", // DVI (对应数字量输入11)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x02\x00\xb8\xaa", // VGA (对应数字量输入12)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x01\x00\xb7\xaa", // CVBS (对应数字量输入13)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x05\x00\xbb\xaa", // USB (对应数字量输入14)
		"\x56\x50\x00\x08\x00\x02\x00\x03\x03\x00\x0b\x00\xc1\xaa", // SDI (对应数字量输入15)
		
	];

	// 检查每个数字量输入，当为true时输出对应指令
	for (var i = 0; i < 17; i++) {
		var inputName = "Pos" + (i + 1);
		// 检查该输入是否存在且值为true
		if (
			MPV["Input"][inputName] &&
			MPV["Input"][inputName]["SignalValue"] == true
		) {
			// 将对应的指令输出到串行量信号1
			MRV["Output"]["Pos1"] = commands[i];
			//console.log("输出指令: " + commands[i] + " (对应输入" + inputName + ")");
			MRV["Refresh"].push("Pos1");
			// 只处理第一个为true的输入，避免冲突
			break;
		}
	}

	return MRV;
}
